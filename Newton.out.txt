Tokens:

       PROGRAM : PROGRAM
    IDENTIFIER : Newton
     SEMICOLON : ;
         BEGIN : BEGIN
       WRITELN : writeln
        LPAREN : (
        STRING : ' n Â  Square root'
        RPAREN : )
     SEMICOLON : ;
       WRITELN : writeln
        LPAREN : (
        STRING : '----------------'
        RPAREN : )
     SEMICOLON : ;
           FOR : FOR
    IDENTIFIER : n
  COLON_EQUALS : :=
       INTEGER : 1
            TO : TO
       INTEGER : 20
            DO : DO
         BEGIN : BEGIN
         WRITE : write
        LPAREN : (
    IDENTIFIER : n
         COLON : :
       INTEGER : 2
        RPAREN : )
     SEMICOLON : ;
    IDENTIFIER : root
  COLON_EQUALS : :=
    IDENTIFIER : n
     SEMICOLON : ;
    IDENTIFIER : prev
  COLON_EQUALS : :=
    IDENTIFIER : root
     SEMICOLON : ;
    IDENTIFIER : diff
  COLON_EQUALS : :=
       INTEGER : 99999
     SEMICOLON : ;
         WHILE : WHILE
    IDENTIFIER : diff
  GREATER_THAN : >
          REAL : 0.000001
            DO : DO
         BEGIN : BEGIN
    IDENTIFIER : root
  COLON_EQUALS : :=
        LPAREN : (
    IDENTIFIER : n
         SLASH : /
    IDENTIFIER : root
          PLUS : +
    IDENTIFIER : root
        RPAREN : )
         SLASH : /
       INTEGER : 2
     SEMICOLON : ;
    IDENTIFIER : diff
  COLON_EQUALS : :=
    IDENTIFIER : prev
         MINUS : -
    IDENTIFIER : root
     SEMICOLON : ;
    IDENTIFIER : prev
  COLON_EQUALS : :=
    IDENTIFIER : root
     SEMICOLON : ;
           END : END
     SEMICOLON : ;
       WRITELN : writeln
        LPAREN : (
    IDENTIFIER : root
         COLON : :
       INTEGER : 14
         COLON : :
       INTEGER : 6
        RPAREN : )
           END : END
           END : END
        PERIOD : .
